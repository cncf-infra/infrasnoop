apiVersion: v1
kind: Secret
metadata:
  name: infrasnoop.infra-db.credentials.postgresql.acid.zalan.do
  namespace: infrasnoop
stringData:
  username: infrasnoop
  password: infrasnoop
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: infra-db
  namespace: infrasnoop
spec:
  resources:
    requests:
      cpu: "1"
      memory: 500M
    limits:
      cpu: "5"
      memory: 5G
  # enableConnectionPooler: true
  # connectionPooler:
  #   mode: session
  #   resources:
  #     requests:
  #       cpu: 250m
  #       memory: 100Mi
  #     limits:
  #       cpu: "1"
  #       memory: 100Mi
  teamId: "infra"
  volume:
    size: 20Gi
  numberOfInstances: 1
  users:
    # database owner
    infrasnoop:
      - superuser
      - createdb

  #databases: name->owner
  databases:
    infrasnoop: infrasnoop
  postgresql:
    version: "14"
  additionalVolumes:
    - name: "ii-k8s-infra-sa-key"
      mountPath: /var/run/secret/cloud.google.com
      volumeSource:
        secret:
          secretName: "ii-k8s-infra-sa-key"
      targetContainers:
        - init-dump-k8s-gubernator
    - name: kubernetes-jenkins
      mountPath: /gs/kubernetes-jenkins
      volumeSource:
        persistentVolumeClaim:
          claimName: kubernetes-jenkins
      targetContainers:
        - all
    - name: empty
      mountPath: /workspace
      volumeSource:
        emptyDir: {}
      targetContainers:
        - all
        # - init-clone-k8s-infra
        # - init-dump-k8s-gubernator
        # - init-dump-prowjobconfig
        # - postgres
  enableShmVolume: true
  initContainers:
    - name: init-clone-k8s-infra
      image: bitnami/git
      workingDir: /workspace
      command:
        - bash
      args:
        - -c
        - git clone --depth 1 https://github.com/kubernetes/test-infra.git
      volumeMounts:
        - mountPath: /workspace
          name: empty
    - name: init-dump-prowjobconfig
      # This should run Caleb's main.go and result in a json file in /workspace/prow-job-config.json
      image: ko-local/infrasnoop
      workingDir: /workspace/test-infra
      args:
        - --path=/workspace/test-infra/config/jobs
        - --output=/workspace/infrasnoop-jobs.json
      volumeMounts:
        - mountPath: /workspace
          name: empty
    - name: init-dump-k8s-gubernator
      # this dumps the latest successful jobs from the gubernator BigQuery DB
      image: google/cloud-sdk:378.0.0
      workingDir: /workspace
      command:
        - /bin/bash
        - -c
        - |
          # set -x
          # set -e
          apt install -y jq wget
          gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project cncf-ci
          bq ls
          # This takes a couple minutes
          bq query -q --nouse_cache --max_rows 99999999 --format prettyjson --nouse_legacy_sql \
            "select job,path,number,started from k8s-gubernator.build.all where result = 'SUCCESS' qualify ROW_NUMBER() OVER(PARTITION BY job ORDER BY number desc) = 1;" \
             > bq_latest_successful_jobs.json
          cat bq_latest_successful_jobs.json | jq -cr '.[]' > latest_successful_jobs.json
          ls -la .
      volumeMounts:
        - name: empty
          mountPath: /workspace
        - name: "ii-k8s-infra-sa-key"
          mountPath: "/var/run/secret/cloud.google.com"
      env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/ii-service-account.json"
    - name: init-dump-job-results-gcs
      # This iterates over the gcs paths from latest successful jobs
      image: google/cloud-sdk:378.0.0
      workingDir: /workspace
      command:
        - /bin/bash
        - -c
        - |
          # set -x
          # set -e
          apt install -y jq wget
          gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
          # This takes a few minutes, results are roughly 120MB
          cat latest_successful_jobs.json \
            | jq -r '. | .path + "/**"' \
            | xargs -L 100 -P 16 gsutil ls -l \
            | grep -v "TOTAL:" \
            | sed "s/^ *//" \
            | sed "s/ *$//" \
            | sed "s/ \+/,/" \
            | sed "s/ \+/,/" \
            > massaged.csv
          ls -la .
      # this job can get pretty beefy
      resources:
        requests:
          cpu: "1"
          memory: "500M"
        limits:
          cpu: "10"
          memory: "5G"
      volumeMounts:
        - name: empty
          mountPath: /workspace
        - name: "ii-k8s-infra-sa-key"
          mountPath: "/var/run/secret/cloud.google.com"
      env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/ii-service-account.json"
