apiVersion: v1
kind: Secret
metadata:
  name: k8s-infra.k8s-infra.credentials.postgresql.acid.zalan.do
  namespace: infrasnoop
stringData:
  username: k8s-infra
  password: k8s-infra
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: k8s-infra
  namespace: infrasnoop
spec:
  enableConnectionPooler: true
  connectionPooler:
    mode: session
    resources:
      requests:
        cpu: 250m
        memory: 100Mi
      limits:
        cpu: "1"
        memory: 100Mi
  teamId: "k8s"
  volume:
    size: 20Gi
  numberOfInstances: 1
  users:
    # database owner
    ii:
      - superuser
      - createdb

    # role for application foo
    k8s-infra: []
    # or 'foo_user: []'

  #databases: name->owner
  databases:
    k8s-infra: k8s-infra
  postgresql:
    version: "14"
  additionalVolumes:
    - name: "ii-k8s-infra-sa-key"
      mountPath: /var/run/secret/cloud.google.com
      volumeSource:
        secret:
          secretName: "ii-k8s-infra-sa-key"
      targetContainers:
        - init-dump-k8s-gubernator
    - name: empty
      mountPath: /workspace
      volumeSource:
        emptyDir: {}
      targetContainers:
        - init-clone-k8s-infra
        - init-dump-k8s-gubernator
        - init-dump-prowjobconfig
        - postgres
  enableShmVolume: true
  initContainers:
    - name: init-clone-k8s-infra
      image: bitnami/git
      workingDir: /workspace
      command:
        - bash
      args:
        - -c
        - git clone --depth 1 https://github.com/kubernetes/test-infra.git
      volumeMounts:
        - mountPath: /workspace
          name: empty
    - name: init-dump-prowjobconfig
      # This should run Caleb's main.go and result in a json file in /workspace/prow-job-config.json
      image: ko-local/infrasnoop
      workingDir: /workspace/test-infra
      args:
        - --path=/workspace/test-infra/config/jobs
        - --output=/workspace/infrasnoop-jobs.json
      volumeMounts:
        - mountPath: /workspace
          name: empty
    - name: init-dump-k8s-gubernator
      # this dumps the latest successful jobs from the gubernator BigQuery DB
      image: google/cloud-sdk:378.0.0
      workingDir: /workspace
      command:
        - /bin/bash
        - -c
        - |
          set -x
          set -e
          apt install -y jq wget
          gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project ii-coop
          # bq ls
          # This takes a while, cache for now (and also to match our cached list of job results)
          # bq query -q --nouse_cache --max_rows 99999999 --format prettyjson --nouse_legacy_sql \
          #   "select job,path,number,started from k8s-gubernator.build.all where result = 'SUCCESS' qualify ROW_NUMBER() OVER(PARTITION BY job ORDER BY number desc) = 1;" \
          #   > latest_successful_jobs.json
          wget https://gcsweb.hh.pair.sharing.io/latest_successful_jobs.json
          # having a hard time authenticating to GCS buckets we want public
          # gsutil cp gs://k8s-staging-apisnoop/infrasnoop/latest_successful_jobs.json .
          ls -la .
      volumeMounts:
        - name: empty
          mountPath: /workspace
        - name: "ii-k8s-infra-sa-key"
          mountPath: "/var/run/secret/cloud.google.com"
      env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/ii-service-account.json"
    - name: init-dump-job-results-gcs
      # This iterates over the gcs paths from latest successful jobs
      image: google/cloud-sdk:378.0.0
      workingDir: /workspace
      command:
        - /bin/bash
        - -c
        - |
          set -x
          set -e
          apt install -y jq wget
          gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS
          cat latest_successful_jobs.json | jq -r '.path + "/**"' > gsutil_arguments.txt
          # This takes a while, results are roughly 120MB
          # cat ~/tmp/workspace/gsutil_arguments.txt | xargs -L 100 -P 16 gsutil ls -l > ~/tmp/workspace/job_logs.txt
          # Use a cache for now
          wget https://gcsweb.hh.pair.sharing.io/job_logs.txt
          # gsutil cp gs://k8s-staging/apisnoop/infrasnoop/job_logs.txt .
          # Possibly a cleaner way, but for now:
          # Remove summary lines | remove spaces from start, - spaces frond end, change first two sets of spaces to commas
          grep -v "TOTAL:" job_logs.txt | sed "s/^ *//" | sed "s/ *$//" | sed "s/ \+/,/" | sed "s/ \+/,/" > massaged.csv
          # gsutil ls gs://kubernetes-jenkins/
          # gsutil ls -l $(cat latest_successful_jobs.json | jq -r '.[] | .path + "/**"' | grep 'gs://kubernetes-jenkins/logs' | sed -z '$ s/\n$//') > job_files.txt
          # cat job_files.txt | jq --raw-input --slurp 'split("\n") | map(select(. != ""))' > job_files.json
          ls -la .
      volumeMounts:
        - name: empty
          mountPath: /workspace
        - name: "ii-k8s-infra-sa-key"
          mountPath: "/var/run/secret/cloud.google.com"
      env:
        - name: "GOOGLE_APPLICATION_CREDENTIALS"
          value: "/var/run/secret/cloud.google.com/ii-service-account.json"
